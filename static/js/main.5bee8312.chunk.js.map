{"version":3,"sources":["components/Sidebar.js","config/api.js","components/KnowledgeBase.js","components/DocumentManagement.js","components/TaskBoard.js","components/Collaboration.js","components/DataAnalysis.js","components/Project.js","components/Feedback.js","components/Auth.js","components/AdminLogin.js","components/AdminDashboard.js","components/AdminQA.js","components/AdminSidebar.js","components/AdminUserManagement.js","components/AdminFeedbackManagement.js","App.js","index.js"],"names":["Sidebar","_ref","isOpen","onLinkClick","_jsx","className","children","_jsxs","Link","to","onClick","api","axios","create","baseURL","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response","message","KnowledgeBase","questions","setQuestions","useState","filteredQuestions","setFilteredQuestions","searchQuery","setSearchQuery","sortBy","setSortBy","selectedQuestion","setSelectedQuestion","showModal","setShowModal","category","setCategory","useEffect","async","get","fetchedQuestions","map","q","likes","updateFilteredQuestions","fetchQuestions","query","sort","filtered","filter","question","toLowerCase","includes","a","b","Date","created_at","style","minHeight","type","placeholder","value","onChange","e","target","cat","params","URLSearchParams","append","res","toString","alert","marginLeft","index","backgroundColor","border","padding","borderRadius","cursor","display","alignItems","gap","toLocaleDateString","_id","stopPropagation","answer","post","questionId","success","Error","updatedQuestions","_error$response$data","handleLike","color","marginRight","pointerEvents","DocumentManagement","files","setFiles","uploading","setUploading","fetchFiles","fetch","json","file","event","formData","FormData","token","localStorage","getItem","body","disabled","filename","fontSize","uploader","upload_time","toLocaleString","href","encodeURIComponent","download","initialTasks","todo","inProgress","done","TaskBoard","columns","setColumns","newTask","setNewTask","newTaskCol","setNewTaskCol","onSubmit","preventDefault","trim","newTaskObj","id","now","content","marginBottom","flex","DragDropContext","onDragEnd","result","source","destination","sourceCol","Array","from","droppableId","destCol","movedTask","splice","Object","entries","colId","tasks","Droppable","provided","ref","innerRef","droppableProps","task","Draggable","draggableId","draggableProps","dragHandleProps","handleDeleteTask","taskId","background","title","Collaboration","comments","setComments","newComment","setNewComment","c","user","text","handleCommentSubmit","newEntry","length","DataAnalysis","questionTrends","setQuestionTrends","categoryLikes","setCategoryLikes","popularCategories","setPopularCategories","activeUsers","setActiveUsers","timeRange","setTimeRange","then","days","weekTrend","fill","forEach","d","getDay","date","i","count","months","monthTrend","getMonth","categoryLikesMap","categoryCountMap","_ref2","name","userMap","username","_ref3","slice","COLORS","LineChart","width","height","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","allowDecimals","Tooltip","Legend","Line","stroke","activeDot","r","BarChart","Bar","PieChart","Pie","cx","cy","outerRadius","label","entry","Cell","Project","setQuestion","setAnswer","setLikes","loading","setLoading","hasLiked","setHasLiked","setError","setQuestionId","isSaved","setIsSaved","undefined","isCollected","setItem","marginTop","storedId","_response$data","window","location","pathname","reload","Feedback","feedback","setFeedback","status","setStatus","maxWidth","margin","textAlign","err","rows","resize","SwitchLoginButton","useLocation","history","useHistory","isAdminLogin","push","Auth","setToken","setUser","routerLocation","mode","setMode","setUsername","password","setPassword","setMessage","showPassword","setShowPassword","boxShadow","letterSpacing","JSON","stringify","ok","required","autoFocus","position","paddingRight","v","right","top","transform","tabIndex","onKeyDown","key","textDecoration","AdminLogin","setAdminToken","setAdminUser","AdminDashboard","adminUser","AdminQA","adminToken","Authorization","catch","confirm","handleDelete","adminSections","path","AdminSidebar","section","API_URL","process","REACT_APP_API_URL","AdminUserManagement","users","setUsers","searchTerm","setSearchTerm","isLoading","setIsLoading","showAddUser","setShowAddUser","newUser","setNewUser","role","editingUser","setEditingUser","editForm","setEditForm","u","isAdmin","fetchUsers","filteredUsers","handleEditInputChange","prev","handleInputChange","userId","handleEditCancel","currentRole","newRole","handleToggleAdmin","handleEditClick","handleDeleteUser","AdminFeedbackManagement","feedbacks","setFeedbacks","fetchFeedbacks","cellPadding","colSpan","fb","logoutButtonStyle","zIndex","App","isSidebarOpen","setIsSidebarOpen","toggleSidebar","handleSetToken","newToken","decoded","jwtDecode","replace","handleLogout","removeItem","startsWith","_Fragment","Switch","Route","exact","component","render","closeSidebar","ReactDOM","Router","document","getElementById"],"mappings":"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","file":"static/js/main.5bee8312.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"../assets/css/Layout.css\";\n\nfunction Sidebar({ isOpen, onLinkClick }) {\n  return (\n    <nav className={`sidebar ${isOpen ? \"active\" : \"\"}`}>\n      <ul>\n        <li>\n          <Link to=\"/\" onClick={onLinkClick}>\n            首頁\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/knowledge\" onClick={onLinkClick}>\n            知識庫\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/documents\" onClick={onLinkClick}>\n            文檔管理\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/collaboration\" onClick={onLinkClick}>\n            協作中心\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/analytics\" onClick={onLinkClick}>\n            數據分析\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/feedback\" onClick={onLinkClick}>\n            反饋\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Sidebar;","import axios from 'axios';\r\n\r\n// API configuration\r\nconst API_BASE_URL = 'http://localhost:5000';\r\n\r\n// Create axios instance with base URL\r\nexport const api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n// Add request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log('API Request:', config.method.toUpperCase(), config.url);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for logging and error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('API Response:', response.config.url, response.data);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Response Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Export the API instance\r\nexport default api;","import React, { useState, useEffect } from \"react\";\nimport \"../assets/css/KnowledgeBase.css\";\nimport { api } from \"../config/api\";\n\nfunction KnowledgeBase() {\n  // 狀態管理區塊\n  const [questions, setQuestions] = useState([]); // 所有問題\n  const [filteredQuestions, setFilteredQuestions] = useState([]); // 篩選後的結果\n  const [searchQuery, setSearchQuery] = useState(\"\"); // 搜尋關鍵字\n  const [sortBy, setSortBy] = useState(\"likes\"); // 排序方式\n  const [selectedQuestion, setSelectedQuestion] = useState(null); // 被點選查看詳情的問題\n  const [showModal, setShowModal] = useState(false); // 是否顯示 modal 詳情視窗\n  const [category, setCategory] = useState('全部'); // 新增分類狀態\n\n  // 取得所有分類（可根據實際情況調整來源）\n  const categories = ['全部', 'IT', '人資', '財務', '行政', '總務', '法務', '採購', '研發', '行銷', '客服', '知識管理'];\n\n  // 從 MongoDB 取得資料\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await api.get('/api/questions');\n        console.log('Fetched questions:', response.data.data); \n        const fetchedQuestions = (response.data.data || []).map(q => ({\n          ...q,\n          likes: q.likes || 0\n        }));\n        setQuestions(fetchedQuestions);\n        updateFilteredQuestions(fetchedQuestions, searchQuery, sortBy);\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    };\n\n    fetchQuestions();\n  }, [searchQuery, sortBy]);\n\n  // 根據搜尋與排序更新列表\n  const updateFilteredQuestions = (questions, query, sort) => {\n    let filtered = questions.filter(q => \n      q.question.toLowerCase().includes(query.toLowerCase())\n    );\n\n    if (sort === \"likes\") {\n      filtered.sort((a, b) => b.likes - a.likes);\n    } else if (sort === \"newest\") {\n      filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n    }\n\n    setFilteredQuestions(filtered);\n  };\n\n  // 搜尋與篩選 API\n  const handleSearch = async () => {\n    try {\n      const params = new URLSearchParams();\n      if (searchQuery) params.append('keyword', searchQuery);\n      if (category && category !== '全部') params.append('category', category);\n      const res = await api.get(`/search?${params.toString()}`);\n      setQuestions(res.data.data || []);\n      updateFilteredQuestions(res.data.data || [], searchQuery, sortBy);\n    } catch (error) {\n      console.error('搜尋失敗:', error);\n      alert('搜尋失敗，請稍後再試');\n    }\n  };\n\n  // 點擊查看詳情\n  const handleShowDetail = (question) => {\n    setSelectedQuestion(question);\n    setShowModal(true);\n  };\n\n  // 處理點讚\n  const handleLike = async (questionId) => {\n    try {\n      const response = await api.post(`/api/questions/${questionId}/like`);\n      if (!response.data.success) {\n        throw new Error('點讚失敗');\n      }\n      \n      // 更新本地狀態\n      const updatedQuestions = questions.map(q => \n        q._id === questionId ? { ...q, likes: q.likes + 1 } : q\n      );\n      setQuestions(updatedQuestions);\n      updateFilteredQuestions(updatedQuestions, searchQuery, sortBy);\n    } catch (error) {\n      console.error('Error liking question:', error);\n      alert('點讚失敗：' + (error.response?.data?.error || '請稍後再試'));\n    }\n  };\n\n  return (\n    <div className=\"knowledge-base\" style={{minHeight: 'calc(100vh - 140px)'}}>\n      <h1>知識庫</h1>\n\n      {/* 控制區塊（搜尋、分類、排序） */}\n      <div className=\"knowledge-controls\">\n        <input\n          type=\"text\"\n          placeholder=\"搜尋問題...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"search-box\"\n        />\n        <select\n          value={category}\n          onChange={e => setCategory(e.target.value)}\n          className=\"sort-dropdown\"\n        >\n          {categories.map(cat => (\n            <option key={cat} value={cat}>{cat}</option>\n          ))}\n        </select>\n        <button onClick={handleSearch} style={{marginLeft: '8px'}}>搜尋</button>\n        <select\n          className=\"sort-dropdown\"\n          value={sortBy}\n          onChange={(e) => setSortBy(e.target.value)}\n        >\n          <option value=\"likes\">熱門</option>\n          <option value=\"newest\">最新</option>\n        </select>\n      </div>\n\n      {/* 顯示問題表格 */}\n      <table className=\"knowledge-table\">\n        <thead>\n          <tr>\n            <th>問題</th>\n            <th>分類</th>\n            <th>讚</th>\n            <th>日期</th>\n\n          </tr>\n        </thead>\n        <tbody>\n          {filteredQuestions.map((q, index) => (\n            <tr key={q._id} onClick={() => handleShowDetail(q)}>\n              <td>{q.question}</td>\n              <td>{q.category || '未分類'}</td>\n              <td>\n                <span \n                  style={{\n                    backgroundColor: '#e3f2fd',\n                    border: '1px solid #e0e0e0',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    cursor: 'default',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '5px'\n                  }}\n                >\n                  👍 {q.likes}\n                </span>\n              </td>\n              <td>{new Date(q.created_at).toLocaleDateString()}</td>\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* 詳情 Modal */}\n      {showModal && selectedQuestion && (\n        <div className=\"modal-overlay\" onClick={() => setShowModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <h2>{selectedQuestion.question}</h2>\n            <p>{selectedQuestion.answer}</p>\n            <div className=\"modal-actions\">\n              <button \n                onClick={() => handleLike(selectedQuestion._id)}\n                style={{\n                  backgroundColor: '#e3f2fd',\n                  color: '#000',\n                  border: 'none',\n                  padding: '8px 16px',\n                  borderRadius: '4px',\n                  cursor: 'default',\n                  marginRight: '10px',\n                  pointerEvents: 'none'\n                }}\n              >\n                👍 點讚 ({selectedQuestion.likes})\n              </button>\n              <button \n                onClick={() => {\n                  setShowModal(false);\n                  setSelectedQuestion(null);\n                }}\n                style={{\n                  backgroundColor: '#6c757d',\n                  color: '#fff',\n                  border: 'none',\n                  padding: '8px 16px',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                關閉\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default KnowledgeBase;","import React, { useState, useEffect } from \"react\";\nimport \"../assets/css/DocumentManagement.css\";\n\nfunction DocumentManagement() {\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n\n  // 取得已上傳檔案列表\n  const fetchFiles = async () => {\n    try {\n      const res = await fetch('/api/files');\n      const data = await res.json();\n      if (data.success) setFiles(data.files);\n      else setFiles([]);\n    } catch {\n      setFiles([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchFiles();\n  }, []);\n\n  // 上傳檔案\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setUploading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    // 不再手動附加 uploader，改由後端從 JWT 取得\n    try {\n      const token = localStorage.getItem('token'); // 假設登入時已存入 localStorage\n      const res = await fetch('/api/upload', {\n        method: 'POST',\n        headers: token ? { 'Authorization': 'Bearer ' + token } : {},\n        body: formData\n      });\n      const data = await res.json();\n      if (data.success) {\n        fetchFiles();\n        alert('上傳成功');\n      } else {\n        alert(data.error || '上傳失敗');\n      }\n    } catch {\n      alert('上傳失敗');\n    }\n    setUploading(false);\n  };\n\n  return (\n    <div className=\"document-management\">\n      <h1>文檔管理</h1>\n      <div className=\"upload-section\">\n        <input\n          type=\"file\"\n          onChange={handleFileUpload}\n          className=\"file-input\"\n          disabled={uploading}\n        />\n      </div>\n      <div className=\"file-list\">\n        <h2>已上傳文件</h2>\n        <ul>\n          {files.map((file, index) => (\n            <li key={index} className=\"file-item\">\n              <span className=\"file-name\">{file.filename}</span>\n              <span style={{ marginLeft: 12, color: '#888', fontSize: 14 }}>\n                上傳者：{file.uploader || '未知'}\n              </span>\n              <span style={{ marginLeft: 12, color: '#888', fontSize: 14 }}>\n                {file.upload_time ? new Date(file.upload_time).toLocaleString() : ''}\n              </span>\n              <a\n                className=\"download-btn\"\n                href={`/api/download/${encodeURIComponent(file.filename)}`}\n                download={file.filename}\n                style={{ marginLeft: 12 }}\n              >\n                下載\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default DocumentManagement;\n","import React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"../assets/css/TaskBoard.css\";\n\nconst initialTasks = {\n  todo: [],\n  inProgress: [],\n  done: [],\n};\n\nconst TaskBoard = () => {\n  const [columns, setColumns] = useState(initialTasks);\n  const [newTask, setNewTask] = useState(\"\");\n  const [newTaskCol, setNewTaskCol] = useState(\"todo\");\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    const sourceCol = Array.from(columns[source.droppableId]);\n    const destCol = Array.from(columns[destination.droppableId]);\n    const [movedTask] = sourceCol.splice(source.index, 1);\n\n    if (source.droppableId === destination.droppableId) {\n      sourceCol.splice(destination.index, 0, movedTask);\n      setColumns({ ...columns, [source.droppableId]: sourceCol });\n    } else {\n      destCol.splice(destination.index, 0, movedTask);\n      setColumns({\n        ...columns,\n        [source.droppableId]: sourceCol,\n        [destination.droppableId]: destCol,\n      });\n    }\n  };\n\n  // 新增任務\n  const handleAddTask = (e) => {\n    e.preventDefault();\n    if (!newTask.trim()) return;\n    const newTaskObj = {\n      id: Date.now().toString(),\n      content: newTask.trim(),\n    };\n    setColumns({\n      ...columns,\n      [newTaskCol]: [...columns[newTaskCol], newTaskObj],\n    });\n    setNewTask(\"\");\n  };\n\n  // 刪除任務\n  const handleDeleteTask = (colId, taskId) => {\n    setColumns({\n      ...columns,\n      [colId]: columns[colId].filter((task) => task.id !== taskId),\n    });\n  };\n\n  return (\n    <div className=\"task-board-container\">\n      <h2>📝 任務看板</h2>\n      {/* 新增任務表單 */}\n      <form onSubmit={handleAddTask} style={{ marginBottom: 16, display: \"flex\", gap: 8 }}>\n        <input\n          type=\"text\"\n          placeholder=\"輸入新任務內容...\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n          style={{ flex: 1, fontSize: 16, padding: 8 }}\n        />\n        <select value={newTaskCol} onChange={(e) => setNewTaskCol(e.target.value)} style={{ fontSize: 16, padding: 8 }}>\n          <option value=\"todo\">待處理</option>\n          <option value=\"inProgress\">進行中</option>\n          <option value=\"done\">已完成</option>\n        </select>\n        <button type=\"submit\" style={{ fontSize: 16, padding: \"8px 16px\" }}>新增任務</button>\n      </form>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"task-columns\">\n          {Object.entries(columns).map(([colId, tasks]) => (\n            <Droppable droppableId={colId} key={colId}>\n              {(provided) => (\n                <div\n                  className=\"task-column\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <h3>\n                    {colId === \"todo\"\n                      ? \"📌 待處理\"\n                      : colId === \"inProgress\"\n                      ? \"🚧 進行中\"\n                      : \"✅ 已完成\"}\n                  </h3>\n                  {tasks.map((task, index) => (\n                    <Draggable\n                      key={task.id}\n                      draggableId={task.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          className=\"task-card\"\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={{ display: 'flex', alignItems: 'center', gap: 8, ...provided.draggableProps.style }}\n                        >\n                          <span style={{ flex: 1 }}>{task.content}</span>\n                          <button\n                            onClick={() => handleDeleteTask(colId, task.id)}\n                            style={{ background: '#ff4d4f', color: '#fff', border: 'none', borderRadius: 4, padding: '2px 8px', cursor: 'pointer' }}\n                            title=\"刪除任務\"\n                          >\n                            刪除\n                          </button>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default TaskBoard;\n","import React, { useState } from \"react\";\nimport \"../assets/css/Collaboration.css\"; // 引入樣式\nimport TaskBoard from \"./TaskBoard\"; // 拖拉式任務面板元件\n\nfunction Collaboration() {\n  // 留言列表\n  const [comments, setComments] = useState([]);\n\n  // 新留言輸入狀態\n  const [newComment, setNewComment] = useState(\"\");\n\n  // 留言提交處理\n  const handleCommentSubmit = () => {\n    if (newComment.trim() !== \"\") {\n      const newEntry = {\n        id: comments.length + 1,\n        user: \"你\", // 這裡可改為登入使用者名\n        text: newComment,\n      };\n      setComments([...comments, newEntry]);\n      setNewComment(\"\");\n    }\n  };\n\n  return (\n    <div className=\"collaboration-container\">\n      <div className=\"content-wrapper\">\n        {/* 頁面標題 */}\n        <h1 className=\"collaboration-title\">🟣 協作中心</h1>\n\n        {/* ✅ 拖拉式 Trello 任務面板 */}\n        <TaskBoard />\n\n        {/* ✅ 知識庫 / 文檔留言討論區 */}\n        <h2 className=\"section-title\">📝 留言討論區</h2>\n        <div className=\"comment-section\">\n          {/* 顯示留言列表 */}\n          <div className=\"comment-list\">\n            {comments.map((c) => (\n              <div key={c.id} className=\"comment\">\n                <strong>{c.user}：</strong> {c.text}\n              </div>\n            ))}\n          </div>\n\n          {/* 新留言輸入區 */}\n          <div className=\"comment-input\">\n            <textarea\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n              placeholder=\"留下你的討論留言...\"\n            />\n            <button onClick={handleCommentSubmit}>送出</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Collaboration;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n} from \"recharts\";\nimport \"../assets/css/DataAnalysis.css\";\n\nfunction DataAnalysis() {\n  const [questionTrends, setQuestionTrends] = useState([]);\n  const [categoryLikes, setCategoryLikes] = useState([]);\n  const [popularCategories, setPopularCategories] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [timeRange, setTimeRange] = useState(\"monthly\"); // 時間篩選\n\n  useEffect(() => {\n    // 取得知識庫所有問題資料\n    fetch('/api/questions')\n      .then(res => res.json())\n      .then(data => {\n        const questions = data.data || [];\n        // 問答量趨勢（以每月/每週分組）\n        if (timeRange === \"weekly\") {\n          // 假設 created_at 為 ISO 字串\n          const days = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\n          const weekTrend = Array(7).fill(0);\n          questions.forEach(q => {\n            const d = new Date(q.created_at);\n            weekTrend[d.getDay()]++;\n          });\n          setQuestionTrends(days.map((date, i) => ({ date, count: weekTrend[i] })));\n        } else {\n          // monthly\n          const months = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n          const monthTrend = Array(12).fill(0);\n          questions.forEach(q => {\n            const d = new Date(q.created_at);\n            monthTrend[d.getMonth()]++;\n          });\n          setQuestionTrends(months.map((date, i) => ({ date, count: monthTrend[i] })));\n        }\n\n        // 各分類點讚數\n        const categoryLikesMap = {};\n        questions.forEach(q => {\n          const cat = q.category || '未分類';\n          categoryLikesMap[cat] = (categoryLikesMap[cat] || 0) + (q.likes || 0);\n        });\n        setCategoryLikes(Object.entries(categoryLikesMap).map(([category, likes]) => ({ category, likes }))); \n\n        // 熱門分類（依問題數量排序）\n        const categoryCountMap = {};\n        questions.forEach(q => {\n          const cat = q.category || '未分類';\n          categoryCountMap[cat] = (categoryCountMap[cat] || 0) + 1;\n        });\n        setPopularCategories(Object.entries(categoryCountMap).map(([name, value]) => ({ name, value })));\n\n        // 活躍用戶（依提問數排序）\n        const userMap = {};\n        questions.forEach(q => {\n          // 取用 q.username，若無則用 q.user 或 q.uploader，否則標示為 ''\n          const user = q.username || q.user || q.uploader || '';\n          if (!user) return; // 跳過沒有用戶名的紀錄\n          userMap[user] = (userMap[user] || 0) + 1;\n        });\n        setActiveUsers(Object.entries(userMap).map(([username, count]) => ({ username, count })).sort((a, b) => b.count - a.count).slice(0, 10));\n      });\n  }, [timeRange]);\n\n  const COLORS = [\"#8884d8\", \"#82ca9d\", \"#ffc658\", \"#ff8042\"];\n\n  return (\n    <div className=\"data-analysis\">\n      <h1>📊 數據分析</h1>\n\n      {/* 時間篩選 */}\n      <div className=\"time-filter\">\n        <label>時間範圍：</label>\n        <select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n        >\n          <option value=\"weekly\">近一週</option>\n          <option value=\"monthly\">近一月</option>\n        </select>\n      </div>\n\n      <section>\n        <div className=\"analysis-section\">\n          <h2>🟢 問答量趨勢</h2>\n          <LineChart width={600} height={300} data={questionTrends}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis allowDecimals={false} />\n            <Tooltip />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"count\"\n              stroke=\"#007bff\"\n              activeDot={{ r: 8 }}\n            />\n          </LineChart>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"analysis-section\">\n          <h2>🟡 各分類點讚數</h2>\n          <BarChart width={600} height={300} data={categoryLikes}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"category\" />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey=\"likes\" fill=\"#ff8042\" />\n          </BarChart>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"analysis-section\">\n          <h2>🔵 最受歡迎分類</h2>\n          <PieChart width={400} height={300}>\n            <Pie\n              data={popularCategories}\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={100}\n              fill=\"#8884d8\"\n              dataKey=\"value\"\n              label\n            >\n              {popularCategories.map((entry, index) => (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={COLORS[index % COLORS.length]}\n                />\n              ))}\n            </Pie>\n            <Tooltip />\n          </PieChart>\n        </div>\n      </section>\n\n      <section>\n        <div className=\"analysis-section\">\n          <h2>👤 使用者活躍排行榜</h2>\n          <table className=\"active-users-table\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>使用者</th>\n                <th>問答數</th>\n              </tr>\n            </thead>\n            <tbody>\n              {activeUsers.map((user, index) => (\n                <tr key={user.username}>\n                  <td>{index + 1}</td>\n                  <td>{user.username}</td>\n                  <td>{user.count}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DataAnalysis;\n","import React, { useState } from \"react\";\nimport api from '../config/api';\n\nfunction Project() {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [likes, setLikes] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [hasLiked, setHasLiked] = useState(false);\n  const [error, setError] = useState(null);\n  const [questionId, setQuestionId] = useState(null);\n  const [isSaved, setIsSaved] = useState(false);\n  const [category, setCategory] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!question.trim()) {\n      alert('請輸入問題');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setAnswer('');\n    setIsSaved(false);\n    setLikes(0);\n    setHasLiked(false);\n    try {\n      // 取得 username，若無則預設 anonymous\n      let username = localStorage.getItem('username') || 'anonymous';\n      const response = await api.post('/ask', { question, username });\n      setAnswer(response.data.answer || '');\n      setCategory(response.data.category || ''); // 儲存分類\n      setQuestionId(response.data.questionId);\n      if (response.data.likes !== undefined) setLikes(response.data.likes);\n      // 自動設為已收藏（資料庫已有相同問題時）\n      if (response.data.isCollected) {\n        setIsSaved(true);\n      } else {\n        setIsSaved(false);\n      }\n      if (!response.data.questionId) throw new Error('未收到問題 ID');\n      localStorage.setItem('currentQuestionId', response.data.questionId);\n      setError(null);\n      setQuestion(\"\"); // 提問成功後清空輸入框\n    } catch (error) {\n      console.error('Error:', error);\n      if (error.message !== '未收到問題 ID') {\n        setError(error.message || '發生錯誤：請稍後再試');\n        alert(error.message || '發生錯誤：請稍後再試');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleLike = async () => {\n    try {\n      const storedId = questionId || localStorage.getItem('currentQuestionId');\n      if (!storedId) {\n        setLikes(likes + 1);\n        setHasLiked(true);\n        alert('此問題尚未收藏，點讚僅暫存於本地');\n        return;\n      }\n      const response = await api.post(`/api/questions/${storedId}/like`);\n      if (response.data.success) {\n        setLikes(likes + 1);\n        setHasLiked(true);\n        setError(null);\n      } else {\n        throw new Error(response.data.error || '點讚失敗');\n      }\n    } catch (error) {\n      console.error('Error liking:', error);\n      setError(error.message || '點讚失敗：請稍後再試');\n      alert(error.message || '點讚失敗：請稍後再試');\n    }\n  };\n\n\n  const handleSave = async () => {\n    try {\n      if (!answer) throw new Error('沒有可收藏的答案');\n      if (isSaved) {\n        alert('此問題已收藏到數據庫');\n        return;\n      }\n      const response = await api.post('/collect', {\n        question,\n        answer,\n        category, // 收藏時帶上分類\n        likes // 傳送目前的點讚數\n      });\n      if (response.data && !response.data.error) {\n        setIsSaved(true);\n        // --- Auto-refresh knowledge base page ---\n        // If user is on /knowledge, reload the page. Otherwise, navigate to /knowledge.\n        if (window.location.pathname === '/knowledge') {\n          window.location.reload();\n        } else {\n          window.location.href = '/knowledge';\n        }\n      } else {\n        throw new Error(response.data?.error || '收藏失敗');\n      }\n    } catch (error) {\n      console.error('Error saving:', error);\n      setError(error.message || '收藏失敗：請稍後再試');\n      alert(error.message || '收藏失敗：請稍後再試');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>AI 知識庫問答系統</h1>\n\n      <form onSubmit={handleSubmit} className=\"question-box\">\n        <textarea\n          placeholder=\"請輸入您的問題...\"\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          disabled={loading}\n         \n        />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? '正在思考...' : '✨ 提問'}\n        </button>\n      </form>\n\n      {answer && (\n        <div className=\"answer-box\">\n          <h2>✨ AI 回答：</h2>\n          <p>{answer}</p>\n          <div style={{ display: 'flex', gap: '10px', marginTop: '15px' }}>\n            <button \n              onClick={() => {\n                if (!isSaved) {\n                  setLikes(likes + 1);\n                  setHasLiked(true);\n                  alert('此問題尚未收藏，點讚僅暫存於本地');\n                  return;\n                }\n                handleLike();\n              }}\n              disabled={hasLiked}\n              title={!isSaved ? '此問題尚未收藏，點讚僅暫存於本地' : ''}\n            >\n              {hasLiked ? '已點讚' : `👍 點讚 (${likes})`}\n            </button>\n            <button onClick={handleSave} disabled={isSaved || !answer}>\n              {isSaved ? '已收藏' : '✨ 收藏到數據庫'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div style={{ color: 'red', marginTop: '20px' }}>\n          {error === '未收到問題 ID' ? null : error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Feedback = () => {\n  const [feedback, setFeedback] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  // 取得當前用戶名稱（若有登入系統）\n  const username = localStorage.getItem(\"username\") || \"anonymous\";\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!feedback.trim()) {\n      setStatus(\"請輸入您的反饋內容。\");\n      return;\n    }\n    try {\n      await axios.post(\"/api/feedback\", {\n        username,\n        feedback: feedback.trim(),\n      });\n      setStatus(\"感謝您的反饋！\");\n      setFeedback(\"\");\n    } catch (err) {\n      setStatus(\"送出失敗，請稍後再試。\");\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: \"0 auto\", padding: 24 }}>\n      <h2 style={{ textAlign: \"center\" }}>反饋</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={feedback}\n          onChange={(e) => setFeedback(e.target.value)}\n          placeholder=\"請輸入您的反饋...\"\n          rows={6}\n          style={{ width: \"100%\", marginBottom: 16, resize: \"vertical\" }}\n        />\n        <div style={{ textAlign: \"center\" }}>\n          <button type=\"submit\" style={{ background: \"#4caf50\", color: \"#fff\", padding: \"8px 24px\", border: \"none\", borderRadius: 4 }}>\n            送出反饋\n          </button>\n        </div>\n      </form>\n      {status && <div style={{ textAlign: \"center\", color: status.includes(\"感謝\") ? \"green\" : \"red\", marginTop: 12 }}>{status}</div>}\n    </div>\n  );\n};\n\nexport default Feedback;\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nfunction SwitchLoginButton() {\n  const location = useLocation();\n  const history = useHistory();\n  const isAdminLogin = location.pathname === '/admin/login';\n  return (\n    <button\n      type=\"button\"\n      style={{ color: isAdminLogin ? '#2d3a4b' : '#b71c1c', background: 'none', border: `1px solid ${isAdminLogin ? '#2d3a4b' : '#b71c1c'}`, borderRadius: 4, padding: '6px 16px', cursor: 'pointer' }}\n      onClick={() => history.push(isAdminLogin ? '/login' : '/admin/login')}\n    >\n      {isAdminLogin ? 'Switch to user login' : '管理員登入'}\n    </button>\n  );\n}\n\nexport default function Auth({ setToken, setUser }) {\n  const routerLocation = useLocation();\n  const [mode, setMode] = useState('login'); // or 'register'\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      if (mode === 'register') {\n        const res = await fetch('/api/register', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username, password })\n        });\n        const data = await res.json();\n        if (res.ok) {\n          setMessage('註冊成功，請登入');\n          setMode('login');\n        } else {\n          setMessage(data.error || '註冊失敗');\n        }\n      } else {\n        const res = await fetch('/api/login', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ username, password })\n        });\n        const data = await res.json();\n        if (res.ok) {\n          setToken(data.token);\n          setUser(username);\n          localStorage.setItem('username', username);\n        } else {\n          setMessage(data.error || '登入失敗');\n        }\n      }\n    } catch (err) {\n      setMessage('連線錯誤');\n    }\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <div style={{ maxWidth: 350, margin: '40px auto', padding: 24, border: '1px solid #ccc', borderRadius: 8, background: '#fff', boxShadow: '0 2px 8px #eee' }}>\n      <h1 style={{ textAlign: 'center', marginBottom: 18, color: '#2d3a4b', letterSpacing: 2 }}>GPT 知識系統</h1>\n      <h2 style={{ textAlign: 'center', marginBottom: 20 }}>{mode === 'login' ? '登入' : '註冊'}</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"帳號\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            required\n            style={{ width: '100%', marginBottom: 10, fontSize: 16, padding: 8 }}\n            autoFocus\n          />\n        </div>\n        <div style={{ position: 'relative' }}>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            placeholder=\"密碼\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            required\n            style={{ width: '100%', marginBottom: 10, fontSize: 16, padding: 8, paddingRight: 36 }}\n          />\n          {/* 只有没有 message 时显示小眼睛 */}\n          {!message && (\n            <span\n              onClick={() => setShowPassword(v => !v)}\n              style={{\n                position: 'absolute',\n                right: 10,\n                top: '50%',\n                transform: 'translateY(-50%)',\n                cursor: 'pointer',\n                color: '#888',\n                fontSize: 18\n              }}\n              title={showPassword ? '隱藏密碼' : '顯示密碼'}\n              tabIndex={0}\n              onKeyDown={e => (e.key === 'Enter' || e.key === ' ') && setShowPassword(v => !v)}\n            >\n              {showPassword ? '🙈' : '👁️'}\n            </span>\n          )}\n        </div>\n        <button type=\"submit\" style={{ width: '100%', fontSize: 16, padding: 10, background: '#2d3a4b', color: '#fff', border: 'none', borderRadius: 4, marginTop: 6 }}>\n          {mode === 'login' ? '登入' : '註冊'}\n        </button>\n      </form>\n      {/* 註冊/登入切換，只在使用者登入頁顯示 */}\n      {routerLocation.pathname !== '/admin/login' && (\n        <div style={{ marginTop: 10, textAlign: 'center' }}>\n          {mode === 'login' ? (\n            <span>還沒有帳號？ <button type=\"button\" style={{ color: '#2d3a4b', background: 'none', border: 'none', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => setMode('register')}>註冊</button></span>\n          ) : (\n            <span>已有帳號？ <button type=\"button\" style={{ color: '#2d3a4b', background: 'none', border: 'none', cursor: 'pointer', textDecoration: 'underline' }} onClick={() => setMode('login')}>登入</button></span>\n          )}\n        </div>\n      )}\n      {/* Switch login page button */}\n      <div style={{ marginTop: 24, textAlign: 'center' }}>\n        <SwitchLoginButton />\n      </div>\n      {message && <div style={{ color: 'red', marginTop: 12, textAlign: 'center' }}>{message}</div>}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nfunction SwitchLoginButton() {\n  const location = useLocation();\n  const history = useHistory();\n  const isAdminLogin = location.pathname === '/admin/login';\n  return (\n    <button\n      type=\"button\"\n      style={{ color: isAdminLogin ? '#2d3a4b' : '#b71c1c', background: 'none', border: `1px solid ${isAdminLogin ? '#2d3a4b' : '#b71c1c'}`, borderRadius: 4, padding: '6px 16px', cursor: 'pointer' }}\n      onClick={() => history.push(isAdminLogin ? '/login' : '/admin/login')}\n    >\n      {isAdminLogin ? 'Switch to user login' : '管理員登入'}\n    </button>\n  );\n}\n\n\nexport default function AdminLogin({ setAdminToken, setAdminUser }) {\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      const res = await fetch('/api/admin-login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setAdminToken(data.token);\n        setAdminUser(username);\n        setMessage('登入成功，正在跳轉...');\n        history.push('/admin/dashboard');\n      } else {\n        if (res.status === 401) {\n          setMessage('僅限管理員登入');\n        } else {\n          setMessage(data.error || '登入失敗');\n        }\n      }\n    } catch (err) {\n      setMessage('連線錯誤');\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 350, margin: '40px auto', padding: 24, border: '1px solid #ccc', borderRadius: 8, background: '#fff', boxShadow: '0 2px 8px #eee' }}>\n      <h1 style={{ textAlign: 'center', marginBottom: 18, color: '#b71c1c', letterSpacing: 2 }}>Admin Login</h1>\n      <h2 style={{ textAlign: 'center', marginBottom: 20 }}>管理員登入</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"帳號\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            required\n            style={{ width: '100%', marginBottom: 10, fontSize: 16, padding: 8 }}\n            autoFocus\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"密碼\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            required\n            style={{ width: '100%', marginBottom: 10, fontSize: 16, padding: 8 }}\n          />\n        </div>\n        <button type=\"submit\" style={{ width: '100%', fontSize: 16, padding: 10, background: '#b71c1c', color: '#fff', border: 'none', borderRadius: 4, marginTop: 6 }}>\n          登入\n        </button>\n      </form>\n      {/* Switch login page button */}\n      <div style={{ marginTop: 24, textAlign: 'center' }}>\n        <SwitchLoginButton />\n      </div>\n      {message && <div style={{ color: 'red', marginTop: 12, textAlign: 'center' }}>{message}</div>}\n    </div>\n  );\n}\n\n","import React, { useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\n\nexport default function AdminDashboard({ adminUser }) {\n  const history = useHistory();\n  useEffect(() => {\n    // 若未登入，導向登入頁\n    if (!adminUser) history.push('/admin/login');\n  }, [adminUser, history]);\n\n  return (\n    <div className=\"admin-dashboard\">\n      <h1>管理員後台</h1>\n      <ul>\n        <li><Link to=\"/admin/qa\">問答管理</Link></li>\n        {/* 可擴充更多管理功能 */}\n      </ul>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nexport default function AdminQA({ adminToken }) {\n  const [questions, setQuestions] = useState([]);\n  const [message, setMessage] = useState('');\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch('/api/questions', {\n      headers: { Authorization: `Bearer ${adminToken}` }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) setQuestions(data.questions || data.data || []);\n        else setMessage(data.error || '讀取失敗');\n      })\n      .catch(() => setMessage('連線錯誤'));\n  }, [adminToken]);\n\n  const handleSearch = async () => {\n    try {\n      const params = new URLSearchParams();\n      if (searchQuery) params.append('keyword', searchQuery);\n      const res = await fetch(`/search?${params.toString()}`, {\n        headers: { Authorization: `Bearer ${adminToken}` }\n      });\n      const data = await res.json();\n      if (data.success) setQuestions(data.data || []);\n      else setMessage(data.error || '搜尋失敗');\n    } catch {\n      setMessage('搜尋失敗');\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('確定要刪除這個問題嗎？')) return;\n    try {\n      const res = await fetch(`/api/questions/${id}`, {\n        method: 'DELETE',\n        headers: { Authorization: `Bearer ${adminToken}` }\n      });\n      const data = await res.json();\n      if (data.success) setQuestions(questions.filter(q => q._id !== id));\n      else setMessage(data.error || '刪除失敗');\n    } catch {\n      setMessage('連線錯誤');\n    }\n  };\n\n  return (\n    <div className=\"knowledge-base\" style={{minHeight: 'calc(100vh - 140px)'}}>\n      <h1>問答管理</h1>\n      {message && <div style={{ color: 'red' }}>{message}</div>}\n      {/* 控制區塊（搜尋、分類） */}\n      <div className=\"knowledge-controls\">\n        <input\n          type=\"text\"\n          placeholder=\"搜尋問題...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"search-box\"\n        />\n        <button onClick={handleSearch} style={{marginLeft: '8px'}}>搜尋</button>\n      </div>\n      <table className=\"knowledge-table\">\n        <thead>\n          <tr>\n            <th>問題</th>\n            <th>分類</th>\n            <th>讚</th>\n            <th>日期</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          {questions.map(q => (\n            <tr key={q._id}>\n              <td>{q.question}</td>\n              <td>{q.category || '未分類'}</td>\n              <td>👍 {q.likes || 0}</td>\n              <td>{q.created_at ? new Date(q.created_at).toLocaleDateString() : ''}</td>\n              <td>\n                <button \n                  onClick={() => handleDelete(q._id)}\n                  className=\"delete-button\"\n                  style={{\n                    backgroundColor: '#dc3545',\n                    color: '#fff',\n                    border: 'none',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    fontSize: '14px'\n                  }}\n                >\n                  ✖️ 刪除\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport '../assets/css/AdminSidebar.css';\n\nconst adminSections = [\n  { path: '/admin/dashboard', label: '總覽' },\n  { path: '/admin/qa', label: '問答管理' },\n  { path: '/admin/user-management', label: '用戶管理' },\n  { path: '/admin/feedback-management', label: '反饋管理' }, \n  // Add more sections here as needed\n];\n\nexport default function AdminSidebar({ onLinkClick }) {\n  const location = useLocation();\n  return (\n    <nav className=\"admin-sidebar\">\n      <ul>\n        {adminSections.map(section => (\n          <li key={section.path} className={location.pathname === section.path ? 'active' : ''}>\n            <Link to={section.path} onClick={onLinkClick}>{section.label}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../assets/css/AdminUserManagement.css';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nexport default function AdminUserManagement() {\n  const history = useHistory();\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showAddUser, setShowAddUser] = useState(false);\n  const [newUser, setNewUser] = useState({\n    name: '',\n    password: '',\n    role: 'user'\n  });\n  const [editingUser, setEditingUser] = useState(null);\n  const [editForm, setEditForm] = useState({ name: '', password: '', role: 'user' });\n\n  const token = localStorage.getItem('token');\n\n  // Fetch users from backend\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setIsLoading(true);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.error('No token found');\n          setError('Authentication required');\n          return;\n        }\n\n        console.log('Fetching users with token:', token);\n        const res = await fetch(`${API_URL}/api/users`, {\n          headers: { \n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('Response status:', res.status);\n        const data = await res.json();\n        console.log('Response data:', data);\n        \n        if (res.status === 403) {\n          setError('You do not have permission to access this page');\n          return;\n        }\n        \n        if (data.success) {\n          setUsers((data.users || []).map(u => ({\n            id: u._id,\n            name: u.username,\n            role: u.role || (u.isAdmin ? 'admin' : 'user')\n          })));\n        } else {\n          console.error('Error in response:', data.error);\n          setError(data.error || 'Failed to fetch users');\n        }\n      } catch (err) {\n        console.error('Fetch error:', err);\n        setError('Failed to fetch users: ' + err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchUsers();\n  }, [history, token]);\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const filteredUsers = users.filter(user =>\n    user.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Add user\n  const handleAddUser = async (e) => {\n    e.preventDefault();\n    try {\n      setIsLoading(true);\n      const res = await fetch(`${API_URL}/api/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ username: newUser.name, password: newUser.password })\n      });\n      const data = await res.json();\n      if (res.ok && data.userId) {\n        // Set role if needed\n        if (newUser.role === 'admin') {\n          await fetch(`${API_URL}/api/users/${data.userId}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ role: 'admin' })\n          });\n        }\n        setUsers([...users, { id: data.userId, name: newUser.name, role: newUser.role }]);\n        setNewUser({ name: '', password: '', role: 'user' });\n        setShowAddUser(false);\n      } else {\n        setError(data.error || 'Failed to add user');\n      }\n    } catch (err) {\n      setError('Failed to add user');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Delete user\n  const handleDeleteUser = async (userId) => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        setIsLoading(true);\n        const res = await fetch(`${API_URL}/api/users/${userId}`, {\n          method: 'DELETE',\n          headers: { 'Authorization': `Bearer ${token}` }\n        });\n        const data = await res.json();\n        if (data.success) {\n          setUsers(users.filter(user => user.id !== userId));\n        } else {\n          setError(data.error || 'Failed to delete user');\n        }\n      } catch (err) {\n        setError('Failed to delete user');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Edit user\n  const handleEditClick = (user) => {\n    setEditingUser(user);\n    setEditForm({ name: user.name, password: '', role: user.role });\n  };\n\n  const handleEditInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleEditSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setIsLoading(true);\n      const body = { role: editForm.role };\n      if (editForm.name !== editingUser.name) body.name = editForm.name;\n      if (editForm.password) body.password = editForm.password;\n      const res = await fetch(`${API_URL}/api/users/${editingUser.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await res.json();\n      if (data.success) {\n        setUsers(users.map(user =>\n          user.id === editingUser.id\n            ? { ...user, name: editForm.name, role: editForm.role }\n            : user\n        ));\n        setEditingUser(null);\n        setEditForm({ name: '', password: '', role: 'user' });\n      } else {\n        setError(data.error || 'Failed to update user');\n      }\n    } catch (err) {\n      setError('Failed to update user');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleEditCancel = () => {\n    setEditingUser(null);\n    setEditForm({ name: '', password: '', role: 'user' });\n  };\n\n  // Toggle admin role\n  const handleToggleAdmin = async (userId, currentRole) => {\n    try {\n      setIsLoading(true);\n      const newRole = currentRole === 'admin' ? 'user' : 'admin';\n      const res = await fetch(`${API_URL}/api/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ role: newRole })\n      });\n      const data = await res.json();\n      if (data.success) {\n        setUsers(users.map(user =>\n          user.id === userId\n            ? { ...user, role: newRole }\n            : user\n        ));\n      } else {\n        setError(data.error || 'Failed to update user role');\n      }\n    } catch (err) {\n      setError('Failed to update user role');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewUser(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"admin-user-management\">\n      <h1>用戶管理</h1>\n      \n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"搜尋用戶...\"\n          value={searchTerm}\n          onChange={handleSearch}\n        />\n        <button \n          className=\"add-user-btn\"\n          onClick={() => setShowAddUser(true)}\n        >\n          新增用戶\n        </button>\n      </div>\n\n      {showAddUser && (\n        <div className=\"add-user-form\">\n          <h2>新增用戶</h2>\n          <form onSubmit={handleAddUser}>\n            <div className=\"form-group\">\n              <label>用戶名：</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={newUser.name}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>密碼：</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={newUser.password}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>角色：</label>\n              <select\n                name=\"role\"\n                value={newUser.role}\n                onChange={handleInputChange}\n              >\n                <option value=\"user\">一般用戶</option>\n                <option value=\"admin\">管理員</option>\n              </select>\n            </div>\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"submit-btn\">新增</button>\n              <button \n                type=\"button\" \n                className=\"cancel-btn\"\n                onClick={() => setShowAddUser(false)}\n              >\n                取消\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {editingUser && (\n        <div className=\"edit-user-form add-user-form\">\n          <h2>編輯用戶</h2>\n          <form onSubmit={handleEditSubmit}>\n            <div className=\"form-group\">\n              <label>用戶名：</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={editForm.name}\n                onChange={handleEditInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>新密碼：</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={editForm.password}\n                onChange={handleEditInputChange}\n                placeholder=\"留空表示不修改密碼\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>角色：</label>\n              <select\n                name=\"role\"\n                value={editForm.role}\n                onChange={handleEditInputChange}\n              >\n                <option value=\"user\">一般用戶</option>\n                <option value=\"admin\">管理員</option>\n              </select>\n            </div>\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"submit-btn\">保存</button>\n              <button type=\"button\" className=\"cancel-btn\" onClick={handleEditCancel}>取消</button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"user-list\">\n        <table>\n          <thead>\n            <tr>\n              <th>用戶名</th>\n              <th>角色</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredUsers.map(user => (\n              <tr key={user.id}>\n                <td>{user.name}</td>\n                <td>{user.role === 'admin' ? '管理員' : '一般用戶'}</td>\n                <td>\n                  <button\n                    onClick={() => handleToggleAdmin(user.id, user.role)}\n                    className={user.role === 'admin' ? 'remove-admin' : 'make-admin'}\n                  >\n                    {user.role === 'admin' ? '取消管理員' : '設為管理員'}\n                  </button>\n                  <button\n                    onClick={() => handleEditClick(user)}\n                    className=\"edit-user\"\n                  >\n                    編輯\n                  </button>\n                  <button\n                    onClick={() => handleDeleteUser(user.id)}\n                    className=\"delete-user\"\n                  >\n                    刪除\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n} ","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nexport default function AdminFeedbackManagement() {\n  const history = useHistory();\n  const [feedbacks, setFeedbacks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('token');\n\n  useEffect(() => {\n    const fetchFeedbacks = async () => {\n      setIsLoading(true);\n      try {\n        const res = await fetch(`${API_URL}/api/feedback`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const data = await res.json();\n        if (data.success) {\n          setFeedbacks(data.feedbacks || []);\n        } else {\n          setError(data.error || 'Failed to fetch feedback');\n        }\n      } catch (err) {\n        setError('Failed to fetch feedback: ' + err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchFeedbacks();\n  }, [token]);\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('確定要刪除此反饋嗎？')) return;\n    setIsLoading(true);\n    try {\n      const res = await fetch(`${API_URL}/api/feedback/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await res.json();\n      if (data.success) {\n        setFeedbacks(feedbacks.filter(fb => fb._id !== id));\n      } else {\n        setError(data.error || 'Failed to delete feedback');\n      }\n    } catch (err) {\n      setError('Failed to delete feedback: ' + err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) return <div>載入中...</div>;\n  if (error) return <div style={{color:'red'}}>Error: {error}</div>;\n\n  return (\n    <div style={{padding: '24px'}}>\n      <h2>反饋管理</h2>\n      <table border=\"1\" cellPadding=\"8\" style={{width: '100%', marginTop: '16px'}}>\n        <thead>\n          <tr>\n            <th>用戶名</th>\n            <th>內容</th>\n            <th>提交時間</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          {feedbacks.length === 0 ? (\n            <tr><td colSpan=\"4\">暫無反饋</td></tr>\n          ) : feedbacks.map(fb => (\n            <tr key={fb._id}>\n              <td>{fb.username}</td>\n              <td>{fb.content}</td>\n              <td>{new Date(fb.created_at).toLocaleString()}</td>\n              <td>\n                <button onClick={() => handleDelete(fb._id)} style={{color:'red'}}>刪除</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./assets/css/App.css\";\nimport \"./assets/css/Sidebar.css\";\nimport \"./assets/css/Layout.css\";\nimport \"./assets/css/DocumentManagement.css\";\nimport \"./assets/css/KnowledgeBase.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport KnowledgeBase from \"./components/KnowledgeBase\";\nimport DocumentManagement from \"./components/DocumentManagement\";\nimport Collaboration from \"./components/Collaboration\";\nimport DataAnalysis from \"./components/DataAnalysis\";\nimport Project from \"./components/Project\";\nimport Feedback from './components/Feedback';\nimport Auth from \"./components/Auth\";\nimport AdminLogin from \"./components/AdminLogin\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport AdminQA from \"./components/AdminQA\";\nimport AdminSidebar from \"./components/AdminSidebar\";\nimport AdminUserManagement from \"./components/AdminUserManagement\";\nimport AdminFeedbackManagement from \"./components/AdminFeedbackManagement\";\nimport { jwtDecode } from \"jwt-decode\";\n\nfunction App() {\n  const [token, setToken] = useState(() => localStorage.getItem('token') || '');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [user] = useState('');\n\n  const toggleSidebar = () => setIsSidebarOpen((prev) => !prev);\n  const closeSidebar = () => setIsSidebarOpen(false);\n\n  const handleSetToken = (newToken) => {\n    setToken(newToken);\n    localStorage.setItem('token', newToken);\n    try {\n      const decoded = jwtDecode(newToken);\n      if (decoded && (decoded.isAdmin === true || decoded.role === 'admin')) {\n        window.location.replace('/admin/dashboard');\n      } else {\n        window.location.replace('/');\n      }\n    } catch (e) {\n      window.location.replace('/');\n    }\n  };\n\n  const handleLogout = () => {\n    setToken('');\n    localStorage.removeItem('token');\n  };\n\n  const location = useLocation();\n\n  if (!token) {\n    if (location.pathname !== '/admin/login' && location.pathname !== '/login') {\n      window.location.replace('/login');\n      return null;\n    }\n    if (location.pathname === '/admin/login') {\n      return <AdminLogin setAdminToken={handleSetToken} setAdminUser={() => {}} />;\n    }\n    return <Auth setToken={handleSetToken} />;\n  }\n\n  let isAdmin = false;\n  try {\n    const decoded = jwtDecode(token);\n    isAdmin = decoded && (decoded.isAdmin === true || decoded.role === 'admin');\n  } catch (err) {\n    isAdmin = false;\n  }\n\n  if (isAdmin && !location.pathname.startsWith('/admin')) {\n    window.location.replace('/admin/dashboard');\n    return null;\n  }\n  if (!isAdmin && location.pathname.startsWith('/admin')) {\n    window.location.replace('/');\n    return null;\n  }\n\n  if (isAdmin) {\n    return (\n      <>\n        <button className=\"hamburger\" onClick={toggleSidebar}>☰</button>\n        <button onClick={handleLogout} style={logoutButtonStyle}>登出</button>\n        <div className=\"app-container\">\n          <AdminSidebar />\n          <div className=\"content\" style={{ marginLeft: 200 }}>\n            <Switch>\n              <Route exact path=\"/admin/dashboard\" component={AdminDashboard} />\n              <Route path=\"/admin/qa\" render={() => <AdminQA adminToken={token} />} />\n              <Route path=\"/admin/user-management\" component={AdminUserManagement} />\n              <Route path=\"/admin/feedback-management\" component={AdminFeedbackManagement} />\n            </Switch>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <button className=\"hamburger\" onClick={toggleSidebar}>☰</button>\n      <button onClick={handleLogout} style={logoutButtonStyle}>登出</button>\n      <div className=\"app-container\">\n        <Sidebar isOpen={isSidebarOpen} onLinkClick={closeSidebar} />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\" component={Project} />\n            <Route path=\"/knowledge\" component={KnowledgeBase} />\n            <Route path=\"/documents\" render={() => <DocumentManagement user={user} />} />\n            <Route path=\"/collaboration\" component={Collaboration} />\n            <Route path=\"/analytics\" component={DataAnalysis} />\n            <Route path=\"/feedback\" component={Feedback} />\n          </Switch>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst logoutButtonStyle = {\n  position: \"absolute\",\n  top: 10,\n  right: 10,\n  zIndex: 1000,\n  background: \"#f44336\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"6px\",\n  padding: \"6px 16px\",\n  cursor: \"pointer\"\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}